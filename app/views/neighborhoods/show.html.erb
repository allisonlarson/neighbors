<div class="col-md-2">
  <div class="list-group" id='sidebar-padding'>

    <%= link_to @area.city.name, city_path(@area.city),"data-no-turbolink" => true, class:'btn list-group-item denver sidebar-button' %>
    <%= link_to 'Search', root_path, class:'btn search list-group-item sidebar-button' %>
    <br>
    <% @filters.each do |filter| %>
      <%= link_to filter, '#', class:'btn list-group-item sidebar-button filter-button', "data-filter-name" => "#{filter.downcase}" %>
    <% end %>
    <br>
    <%= users_neighborhood(@area) %>
    <br>
    <%= link_to 'See Photos', neighborhood_photos_gallery_path(@area), class:'btn list-group-item sidebar-button' %>
    <% if current_user %>
      <a class="btn list-group-item sidebar-button" data-toggle="modal" data-target="#myModal">
        Upload Photo
      </a>
    <% end %>
  </div>
</div>

<!-- Modal -->
<% if current_user %>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
        <h4 class="modal-title" id="myModalLabel">Upload a Photo</h4>
      </div>
      <div class="modal-body">
        <%= form_for @photo, url: neighborhood_photos_path, method: :create do |f|%>
          <%= f.file_field :photo %>
          <%= f.hidden_field :neighborhood_id, value: @area.id %>
          <%= f.hidden_field :user_id, value: current_user.id %>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <%= f.submit value="Upload", class: "btn btn-primary" %>
          <% end %>
      </div>
    </div>
  </div>
</div>
<% end %>

<div class="col-md-8">
  <div id="neighborhood-information" data-neighborhood-id="<%= params[:id] %>"></div>
  <div id="map-canvas">
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp"></script>
    <script type="text/javascript" src="http://maps.google.com/maps/api/js?libraries=geometry&sensor=true_or_false"></script>

    <script>
      var map;
      function initialize() {

        var mapOptions = {
          zoom: 13,
          center: new google.maps.LatLng(<%=@area.coordinates.first.lat%>, <%=@area.coordinates.first.lon%>)
        };

        map = new google.maps.Map(document.getElementById('map-canvas'),
            mapOptions);

        var markerBounds = new google.maps.LatLngBounds();

        var neighborhoodCoords = [
          <% @area.coordinates.each do |coord| %>
            new google.maps.LatLng(<%=coord.lat%>, <%=coord.lon%>),
          <%end%>
        ];

        var neighborhood = new google.maps.Polygon({
          paths: neighborhoodCoords,
          strokeColor: '#919191',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#CFCFCF',
          fillOpacity: 0.5
        });``

        neighborhood.setMap(map);


        var id = $('#neighborhood-information').data('neighborhood-id');


        drawMarkers(id, map, neighborhood);


        for(var i=0; i<neighborhoodCoords.length; i++){
           markerBounds.extend(neighborhoodCoords[i]);
        }

        map.fitBounds(markerBounds);

        _.each($('.filter-button'), function(filterButton){
          $(filterButton).click(function(event) {

            event.preventDefault();
            var filter = $(this).data('filter-name')
            drawMarkers(id, map, neighborhood, filter)
          });
        });

      }

      var clearMarkers = function(){
        for(var j=0; j<markers.length; j++){
          markers[j].setMap(null);
        };
      }

      var markers = [];

      var drawMarkers = function(id,map,neighborhood,filter){
        clearMarkers();
        var infoWindow = new google.maps.InfoWindow({
          content: 'stuff'
        });

        if(typeof filter !== 'undefined'){
          var url = '/api/v1/neighborhoods/'+id+'/establishments?filter='+filter;
        }else{
          var url = '/api/v1/neighborhoods/'+id+'/establishments';
        }

          $.get(url, function(data){
          _.each(data, function(estab){
            var myLatlng = new google.maps.LatLng(estab['location']['lat'], estab['location']['lng']);

            if(google.maps.geometry.poly.containsLocation(myLatlng, neighborhood)){

              var marker = new google.maps.Marker({
                  position: myLatlng,
                  map: map,
                  title: estab['name'],
                  hereNow: estab['hereNow']['summary']
              });

              markers.push(marker)
              marker.setMap(map);

              google.maps.event.addListener(marker, 'click', function(){
                infoWindow.setContent("<p>"+this.title +"<br>"+ this.hereNow+ "</p>");
                infoWindow.open(map, this);
              });
            }
          });
        });

      }


      google.maps.event.addDomListener(window, 'load', initialize);
    </script>
  </div>
</div>
